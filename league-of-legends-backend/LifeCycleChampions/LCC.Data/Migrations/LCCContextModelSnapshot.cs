// <auto-generated />
using System;
using LCC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LCC.Data.Migrations
{
    [DbContext(typeof(LCCContext))]
    partial class LCCContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LCC.Data.Entities.Champion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("EditedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("EditedDate");

                    b.Property<int>("InfoId");

                    b.Property<string>("Lore");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Partype");

                    b.Property<int>("PassiveId");

                    b.Property<int>("StatsId");

                    b.Property<int?>("TagId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("InfoId")
                        .IsUnique();

                    b.HasIndex("PassiveId")
                        .IsUnique();

                    b.HasIndex("StatsId")
                        .IsUnique();

                    b.HasIndex("TagId");

                    b.ToTable("Champions");
                });

            modelBuilder.Entity("LCC.Data.Entities.ChampionInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Attack");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("Defense");

                    b.Property<int>("Difficulty");

                    b.Property<string>("EditedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("EditedDate");

                    b.Property<int>("Magic");

                    b.HasKey("Id");

                    b.ToTable("ChampionInfos");
                });

            modelBuilder.Entity("LCC.Data.Entities.ChampionStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Armor");

                    b.Property<double>("ArmorPerLevel");

                    b.Property<double>("AttackDamage");

                    b.Property<double>("AttackDamagePerLevel");

                    b.Property<double>("AttackRange");

                    b.Property<double>("AttackSpeedOffset");

                    b.Property<double>("AttackSpeedPerLevel");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<double>("Crit");

                    b.Property<double>("CritPerLevel");

                    b.Property<string>("EditedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("EditedDate");

                    b.Property<double>("Hp");

                    b.Property<double>("HpPerLevel");

                    b.Property<double>("HpRegen");

                    b.Property<double>("HpRegenPerLevel");

                    b.Property<double>("MoveSpeed");

                    b.Property<double>("Mp");

                    b.Property<double>("MpPerLevel");

                    b.Property<double>("MpRegen");

                    b.Property<double>("MpRegenPerLevel");

                    b.Property<double>("SpellBlock");

                    b.Property<double>("SpellBlockPerLevel");

                    b.HasKey("Id");

                    b.ToTable("ChampionStats");
                });

            modelBuilder.Entity("LCC.Data.Entities.Passive", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<string>("EditedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("EditedDate");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Passives");
                });

            modelBuilder.Entity("LCC.Data.Entities.Skin", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ChampionId");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("EditedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("EditedDate");

                    b.Property<string>("Name");

                    b.Property<int>("Num");

                    b.HasKey("Id");

                    b.HasIndex("ChampionId");

                    b.ToTable("Skins");
                });

            modelBuilder.Entity("LCC.Data.Entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ChampionId");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("EditedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("EditedDate");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("ChampionId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("LCC.Data.Entities.Champion", b =>
                {
                    b.HasOne("LCC.Data.Entities.ChampionInfo", "Info")
                        .WithOne("Champion")
                        .HasForeignKey("LCC.Data.Entities.Champion", "InfoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LCC.Data.Entities.Passive", "Passive")
                        .WithOne("Champion")
                        .HasForeignKey("LCC.Data.Entities.Champion", "PassiveId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LCC.Data.Entities.ChampionStats", "Stats")
                        .WithOne("Champion")
                        .HasForeignKey("LCC.Data.Entities.Champion", "StatsId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LCC.Data.Entities.Tag")
                        .WithMany("Champions")
                        .HasForeignKey("TagId");
                });

            modelBuilder.Entity("LCC.Data.Entities.Skin", b =>
                {
                    b.HasOne("LCC.Data.Entities.Champion", "Champion")
                        .WithMany("Skins")
                        .HasForeignKey("ChampionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LCC.Data.Entities.Tag", b =>
                {
                    b.HasOne("LCC.Data.Entities.Champion")
                        .WithMany("Tags")
                        .HasForeignKey("ChampionId");
                });
#pragma warning restore 612, 618
        }
    }
}
